<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="clubMapper">
	
	
	<resultMap type="club" id="clubResultSet">
		<result column="CLUB_NO"			 property="clubNo" />
		<result column="USER_NO"		 	 property="userNo" />
		<result column="CLUB_NAME"			 property="clubName" />
		<result column="CLUB_LIMIT"			 property="clubLimit" />
		<result column="CLUB_CREATEDATE"	 property="clubCreatedate" />
		<result column="CLUB_DISCRIPT"       property="clubDiscript" />
		<result column="USER_ID"          property="clubDiscript" />
		<result column="CLUB_LOCATION" 		 property="clubLocation" />
		<result column="CLUB_STATUS" 		 property="clubStatus" />
		<result column="CLUB_IMG" 			 property="clubImg" />
		<result column="NEWCOUNT"			 property="newCount" />
		<result column="CLUB_COUNT"			 property="clubCount" />
		<result column="LIKECOUNT"			 property="likeCount" />
		<result column="MEMCOUNT"			 property="memCount" />
		<result column="enrollDate"			 property="enrollDate" />
		<result column="OPENCOUNT"			 property="openCount" />
		<result column="NICKNAME"   		 property="nickname" />
		<result column="LIKEUSER"			 property="likeUser" />
		<result column="MEMUSER"			 property="memUser" />
	</resultMap>

	<!-- 
	<resultMap type="club" id="clubLikeResultSet">
		<result column="CLUB_NAME" property="userName" />
		<result column=
	</resultMap>
	 -->
	<!-- 모임 페이지 리스트 종 갯수 조회  -->
	<select id="selectListCount" resultType="_int">
		SELECT 
				COUNT(*)
		  FROM
		  		CLUB
  		 WHERE
  		 		CLUB_STATUS = 'Y'
	</select>
	
	<!-- 모임 리스트 페이지에 뿌려줄 정보  조회 -->
	<select id="selectList" resultMap="clubResultSet">
		SELECT	
			   C.CLUB_NO
			  ,C.USER_NO
			  ,C.NICKNAME
		 	  ,C.CLUB_NAME
			  ,C.CLUB_LIMIT
			  ,C.CLUB_CREATEDATE
			  ,C.CLUB_DISCRIPT
			  ,C.CLUB_IMG
			  ,C.CLUB_LOCATION
			  ,C.CLUB_COUNT
			  ,C.NEWCOUNT
			  ,C.LIKECOUNT
			  ,COUNT(CM.CLUB_NO) "MEMCOUNT"	
		 FROM
		 	  CLUB_MEMBER CM
		 JOIN 	
				(SELECT	
					   C.CLUB_NO
					  ,C.USER_NO
					  ,C.NICKNAME
				 	  ,C.CLUB_NAME
					  ,C.CLUB_LIMIT
					  ,C.CLUB_CREATEDATE
					  ,C.CLUB_DISCRIPT
					  ,C.CLUB_IMG
					  ,C.CLUB_LOCATION
					  ,C.CLUB_COUNT
					  ,C.NEWCOUNT
					  ,COUNT(CL.CLUB_NO) "LIKECOUNT"
				 FROM
				 	  CLUB_LIKE CL 	
				 RIGHT
				  JOIN
					  (
					   SELECT 
							   CLUB_NO
							  ,C.USER_NO
							  ,M.NICKNAME
						 	  ,CLUB_NAME
							  ,CLUB_LIMIT
							  ,CLUB_CREATEDATE
							  ,CLUB_DISCRIPT
							  ,CLUB_IMG
							  ,CLUB_LOCATION
							  ,CLUB_COUNT
				              ,CASE WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL) 
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') FROM DUAL) <![CDATA[ > ]]> 30 THEN 0
				                    WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL)
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') from dual) <![CDATA[ < ]]> 30 THEN 1
				                     END AS "NEWCOUNT"
					  	 FROM
					  	  	   CLUB C
				 	  	 JOIN
				 	  	  	   MEMBER M ON (C.USER_NO = M.USER_NO)
				  	    WHERE
				  	  	 	   CLUB_STATUS = 'Y') C ON (C.CLUB_NO = CL.CLUB_NO)
				 GROUP
				    BY
					    C.CLUB_NO
					   ,C.USER_NO
					   ,C.NICKNAME
					   ,C.CLUB_NAME
					   ,C.CLUB_LIMIT
					   ,C.CLUB_CREATEDATE
					   ,C.CLUB_DISCRIPT
					   ,C.CLUB_IMG
					   ,C.CLUB_LOCATION
					   ,C.CLUB_COUNT	  	 	   
				  	   ,C.NEWCOUNT) C ON (C.CLUB_NO = CM.CLUB_NO)
		 GROUP
		    BY
		       C.CLUB_NO
			  ,C.USER_NO
			  ,C.NICKNAME
		 	  ,C.CLUB_NAME
			  ,C.CLUB_LIMIT
			  ,C.CLUB_CREATEDATE
			  ,C.CLUB_DISCRIPT
			  ,C.CLUB_IMG
			  ,C.CLUB_LOCATION
			  ,C.CLUB_COUNT
			  ,C.NEWCOUNT
			  ,C.LIKECOUNT	 	   
		 ORDER
		    BY
		       C.CLUB_NO DESC
	</select>

	
	<!-- 모임 생성 쿼리문  
		CLUB_CREATEDATE / CLUB_STATUS 컬럼 빼고 쓰니까 
		ORA-01747: invalid user.table.column, table.column, or column specification
		해당 오류 발생.. ㅠ 	
	 -->
	<insert id="insertClub" parameterType="club">
		INSERT
		  INTO 
		        CLUB
		       (
		        CLUB_NO,
		        USER_NO,
			    CLUB_NAME,
			    CLUB_LIMIT,
				CLUB_CREATEDATE,
				CLUB_DISCRIPT,
				CLUB_IMG,
				CLUB_LOCATION,
				CLUB_STATUS
		       )
	    VALUES 
			   (
			   SEQ_CNO.NEXTVAL
			  ,#{userNo}
			  ,#{clubName}
			  ,#{clubLimit}
			  ,SYSDATE
			  ,#{clubDiscript}
			  ,#{clubImg}
			  ,#{clubLocation}
			  ,'Y'
			   )

			   
	</insert>
	
	<!-- 모임 INSERT가 잘 되었다면 모임 개설자 CLUB_MEMBER에 INSET해주기 -->
	<insert id="insertClubAdmin" parameterType="club">
	   <selectKey resultType="_int" keyProperty="clubNo" order="BEFORE" >
	   		SELECT  SEQ_CNO.CURRVAL FROM DUAL 
	   </selectKey>
		INSERT
		  INTO
		       CLUB_MEMBER
		       (
		       	CLUB_NO
		       ,USER_NO
		       ,ENROLL_DATE
		       )
        VALUES
			   (
			    #{ clubNo }
			   ,#{ userNo }
			   ,SYSDATE
			   )	
	</insert>
	
	
	
	<!-- Group List 조회수 Update -->
	<update id="increaseCount" parameterType="club">
		UPDATE 
				CLUB
		   SET
				CLUB_COUNT = ( CLUB_COUNT + 1 )
		 WHERE
		 		CLUB_NO = #{ clubNo }
		   AND
		   		CLUB_STATUS = 'Y'				
	</update>
	
	<!-- Club List Detail Select -->
	<select id="selectDetailClub" parameterType="club" resultMap="clubResultSet" >
  
		SELECT  
				 C.CLUB_NO
		        ,C.USER_NO
		        ,M.NICKNAME
		        ,C.CLUB_NAME
		        ,C.CLUB_LIMIT
		        ,C.CLUB_CREATEDATE
		        ,C.CLUB_DISCRIPT
		        ,C.CLUB_IMG
		        ,C.CLUB_LOCATION
		        ,C.CLUB_STATUS
		        ,C.CLUB_COUNT
		        ,CM.USER_NO "MEMUSER"
		        ,CM.ENROLL_DATE
		        ,CL.USER_NO "LIKEUSER"
		        ,(SELECT COUNT(*) FROM CLUB_LIKE WHERE CLUB_NO = ${ clubNo }) as "LIKECOUNT"
		        ,(SELECT COUNT(*) FROM CLUB_MEMBER WHERE CLUB_NO = ${ clubNo }) as "MEMCOUNT"
		  FROM 
		 		CLUB C
		  LEFT
		  JOIN
		       (
		         SELECT 
		         		 CM.USER_NO
		         		,CM.ENROLL_DATE 
	         	   FROM 
	         	         CLUB_MEMBER CM 
          		   WHERE	   
        	             CM.USER_NO = #{ userNo } 
        	             AND CM.CLUB_NO = #{ clubNo } 
														) CM ON (C.CLUB_NO = CLUB_NO)
		  LEFT
		  JOIN   
		        (
		          SELECT 
		          		  CL.USER_NO 
          		    FROM 
          		    	  CLUB_LIKE CL
          		   WHERE
          		   			   
        	             CL.USER_NO = #{ userNo } 
        	             AND CL.CLUB_NO = #{ clubNo } 
						   								) CL ON(C.CLUB_NO = CLUB_NO)
		  LEFT
		  JOIN  
		        MEMBER M ON(C.USER_NO = M.USER_NO)
		  WHERE
		         C.CLUB_NO = #{ clubNo }
		    AND 
				 C.CLUB_STATUS = 'Y'
	</select>
	
	
	<!-- Club General List Select -->
	<select id="clubGeneral" parameterType="_int" resultMap="clubResultSet">
		SELECT 
				C.CLUB_NO
			   ,C.USER_NO
			   ,C.CLUB_NAME
			   ,C.CLUB_IMG
			   ,C.CLUB_LOCATION
			   ,C.NEWCOUNT
			   ,C.ENROLL_DATE as "enrollDate"
			   ,COUNT(C.CLUB_NO) AS "MEMCOUNT"
		  FROM
		  		CLUB_MEMBER M 
	  	  JOIN	
			   (SELECT 
						C.CLUB_NO
					   ,C.USER_NO
					   ,CLUB_NAME
					   ,CLUB_IMG
					   ,CLUB_LOCATION
					   ,CASE WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL) 
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') FROM DUAL) <![CDATA[ > ]]> 30 THEN 0
				                    WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL)
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') from dual) <![CDATA[ < ]]> 30 THEN 1
				                     END AS "NEWCOUNT"
					   ,M.ENROLL_DATE
				  FROM 
				  		CLUB C
				  JOIN  
				  		CLUB_MEMBER M ON(C.CLUB_NO = M.CLUB_NO)
				 WHERE
				 		M.USER_NO = #{ userNo }) C ON (C.CLUB_NO = M.CLUB_NO)
		  GROUP
		     BY
		     	 C.CLUB_NO
		     	,C.USER_NO
		     	,CLUB_NAME
		     	,CLUB_IMG
		     	,CLUB_LOCATION
		     	,C.NEWCOUNT
		     	,C.ENROLL_DATE
	     ORDER
	        BY
	        	C.ENROLL_DATE DESC
	</select>
	
	<!--  update / delete resultType 필요없음  -->
	<delete id="ajaxDeleteClub" parameterType="club">
		DELETE
		  FROM  
		       CLUB_MEMBER
	     WHERE
	     	   CLUB_NO = #{ clubNo }
	       AND	   
		       USER_NO = #{ userNo }
	</delete>
	
	
	<!--  Insert Club Member -->
	<insert id="ajaxInsertClub" parameterType="club">
		INSERT
		  INTO
		       CLUB_MEMBER
		       (
		       	CLUB_NO
		       ,USER_NO
		       ,ENROLL_DATE
		       )
        VALUES
			   (
			    #{ clubNo }
			   ,#{ userNo }
			   ,SYSDATE
			   )
	</insert>
	
	
	
	<!-- 모임 관리자 모임 정보 SELECT 쿼리  -->
	<select id="clubAdmin" parameterType="_int" resultMap="clubResultSet">
		SELECT
	            C.CLUB_NO
	           ,C.USER_NO
	           ,C.CLUB_NAME
	           ,C.CLUB_LIMIT
	           ,TO_CHAR(C.CLUB_CREATEDATE, 'YYYY/MM/DD/HH:MI:SS') "CLUB_CREATEDATE"
	           ,C.CLUB_DISCRIPT
	           ,C.CLUB_IMG
	           ,C.CLUB_LOCATION
	           ,C.CLUB_STATUS
	           ,C.CLUB_COUNT
	           ,MEMCOUNT
	           ,LIKECOUNT
	           ,COUNT(CO.CLUB_NO) "OPENCOUNT"       
		 FROM 
		  		CLUB_OPEN CO      
		RIGHT
	   	 JOIN                 
     		   (
     		    SELECT  
			            C.CLUB_NO
			           ,C.USER_NO
			           ,C.CLUB_NAME
			           ,C.CLUB_LIMIT
			           ,C.CLUB_CREATEDATE
			           ,C.CLUB_DISCRIPT
			           ,C.CLUB_IMG
			           ,C.CLUB_LOCATION
			           ,C.CLUB_STATUS
			           ,C.CLUB_COUNT
			           ,MEMCOUNT
			           ,COUNT(CL.CLUB_NO) "LIKECOUNT"     
			      FROM 
			            CLUB_LIKE CL
			     RIGHT
			      JOIN                 
			           (
			            SELECT 
			            	    C.CLUB_NO
					           ,C.USER_NO
					           ,C.CLUB_NAME
					           ,C.CLUB_LIMIT
					           ,C.CLUB_CREATEDATE
					           ,C.CLUB_DISCRIPT
					           ,C.CLUB_IMG
					           ,C.CLUB_LOCATION
					           ,C.CLUB_STATUS
					           ,C.CLUB_COUNT
			            	   ,COUNT(CM.CLUB_NO) "MEMCOUNT"
			              FROM 
			              		CLUB C
			              LEFT
			              JOIN
			                    CLUB_MEMBER CM ON (C.CLUB_NO = CM.CLUB_NO)
			             GROUP
			                BY
			            	    C.CLUB_NO
					           ,C.USER_NO
					           ,C.CLUB_NAME
					           ,C.CLUB_LIMIT
					           ,C.CLUB_CREATEDATE
					           ,C.CLUB_DISCRIPT
					           ,C.CLUB_IMG
					           ,C.CLUB_LOCATION
					           ,C.CLUB_STATUS
					           ,C.CLUB_COUNT
			            HAVING 
			            		C.USER_NO = #{ userNo }
			               AND 
			               		C.CLUB_STATUS ='Y' ) C ON (C.CLUB_NO = CL.CLUB_NO)
			      GROUP
			         BY 
	            	    C.CLUB_NO
			           ,C.USER_NO
			           ,C.CLUB_NAME
			           ,C.CLUB_LIMIT
			           ,C.CLUB_CREATEDATE
			           ,C.CLUB_DISCRIPT
			           ,C.CLUB_IMG
			           ,C.CLUB_LOCATION
			           ,C.CLUB_STATUS
			           ,C.CLUB_COUNT
			           , MEMCOUNT) C ON(C.CLUB_NO = CO.CLUB_NO)
		GROUP 
		   BY 
	            C.CLUB_NO
	           ,C.USER_NO
	           ,C.CLUB_NAME
	           ,C.CLUB_LIMIT
	           ,C.CLUB_CREATEDATE
	           ,C.CLUB_DISCRIPT
	           ,C.CLUB_IMG
	           ,C.CLUB_LOCATION
	           ,C.CLUB_STATUS
	           ,C.CLUB_COUNT
	           ,MEMCOUNT
	           ,LIKECOUNT
		ORDER 
		   BY
		   	   C.CLUB_NO DESC
	</select>	
	
	<!-- Club_Member List Select -->
	<select id="clubMemerSelectAdmin" parameterType="_int" resultMap="clubResultSet">
		 SELECT 
		         CM.CLUB_NO
		        ,CM.USER_NO
		        ,M.USER_ID
		        ,M.NICKNAME
		        ,CM.ENROLL_DATE "enrollDate"
		  FROM
		        CLUB_MEMBER CM
		  JOIN
		        MEMBER M ON(M.USER_NO = CM.USER_NO)
		 WHERE
		        CM.CLUB_NO = #{ clubNo }
		   AND 
		   		M.STATUS = 'N'
		 ORDER 
		    BY 
		        CM.ENROLL_DATE DESC 
	</select>
	
	
	<!-- clubLikeResultset -->
	<select id="selectClubLike" parameterType="_int" resultMap="clubResultSet">
		SELECT 
		       CLUB_NO
	      FROM
	      	   CLUB_LIKE
	     WHERE 
	           USER_NO = #{ user_no }
	
	</select>
	
	<!-- Club Like Insert -->
	<insert id="clubLikeInsert" parameterType="club">
		INSERT 
		  INTO
		       CLUB_LIKE
		       (
		        CLUB_NO
		       ,USER_NO
		       )
        VALUES
        	   (
        	   #{clubNo}
        	  ,#{userNo}
        	   )
	</insert>
	
	
	<!-- Club Like delete -->
	<delete id="clubLikeDelete" parameterType="club">
		DELETE
		  FROM  
		       CLUB_LIKE
	     WHERE
	     	   CLUB_NO = #{ clubNo }
	       AND	   
		       USER_NO = #{ userNo }
	</delete>
	
</mapper>
